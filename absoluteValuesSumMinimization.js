/*
 Дан отсортированный массив целых чисел а, найти значение х, приадлежащее этому массиву, 
 такое что:
 abs(a[0] - x) + abs(a[1] - x) + ... + abs(a[a.length-1] - x)
 будет минимальным из возможных. Если возможно несколько вариантов ответа, 
 выходной параметр должен быть минимальным.
 Например,
 Для a = [2, 4, 7] ответ 4, для а = [2, 4, 6, 7]  ответ 4.
 Советы: 
 Math.floor()
 Вход/выход
 Не пустой массив целых чисел, отсортированный в порядке возрастания.
 Гарантированные ограничения
 1 <= a.length <= 200,
 -106 <= a[i] <= 106
 Выходной параметр целое число
 */

//У Дилана Израеля в этой задаче указаны тесты с ошибкой: он передает
//в качестве входного аргумента неотсортированные массивы.
//For a = [2, 4, 7], the output should be absoluteValuesSumMinimization(a) = 4
//For a = [2, 4, 7, 6], the output should be absoluteValuesSumMinimization(a) = 4
//For a = [2, 4, 7, 6, 6], the output should be absoluteValuesSumMinimization(a) = 7
//For a = [2, 4, 7, 6, 6, 8], the output should be absoluteValuesSumMinimization(a) = 7
//Поэтому сперва решим обратную задачу: для заданного значения и массива 
//чисел, найдем сумму абсолютных разностей элементов массива и этого 
//значения


function absoluteValuesSum(arr, x) {
	let result = 0;
	arr.forEach(digit => {
		result += Math.abs(digit - x);
	});
	return result;
}

console.log(absoluteValuesSum([2, 4, 7, 6, 6], 7));//10
console.log(absoluteValuesSum([2, 4, 7, 6, 6], 6));//7, что меньше 10.

//Идея его решения заключалась в том, что мы находим медиану последовательности.
//Если все элементы выборки различны, то медиана — это такое число 
//выборки, что ровно половина из элементов выборки больше него, а другая
//половина меньше него.
//Для последовательности чисел нечетной длины, медиана находится ровно
//посередине: для {3, 5, 5, 9, 11} медина 5.
//Для последовательности четной длины {1, 3, 5, 7} медианой может служить
//как 3, так и 5. Но мы берем минимальное, поэтому 3.


function absoluteValuesSumMinimization(arr) {
	//Проверяем длину на четность
	let x;
	if (arr.length % 2 === 0) {
		x = arr[arr.length / 2 - 1];
	} else {
		x = arr[Math.floor(arr.length / 2)];
	}
	return x;
}

module.exports = { absoluteValuesSumMinimization };
